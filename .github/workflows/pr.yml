name: Deploy PR
on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Deploy PR
    uses: ./.github/workflows/deploy_nodejs_backend.yml
    with:
      put-items-dynamo: true
      image: "ecr-image-trnsv-burst-blder-res-fg"
      version: ${{ github.sha }}
      description-for-version: "Manager subscriber"
      dockerfile-path: "docker/virginia.dockerfile"
      aws-region: us-east-1
      node-version: 14.x
      service: "ecs-serv-trnsv-burst-blder-res-fg"
      task-definition-path: "pipeline/pr-task-definition.json"
      stop-tasks: "true"
      desired-task-count: 2
      cluster: "ecs-clus-tvs-opf-fg"
      load-balancer-name: "opf-nlb-oprtns-frmwrk"
      target-group-name: "nlb-tg-trnsv-burst-blder-res"
      container-name: "ecs-cntr-trnsv-burst-blder-res-fg"
      check-health: true
      path-environments-variables: >
        pipeline/qa-task-definition.json
        pipeline/st-task-definition.json
        pipeline/pr-task-definition.json
      environment: pr
      service-type: ecs
      build-command: >
        npm run build
    secrets:
      DIG_READER_GITHUB_ACCESS_TOKEN: ${{ secrets.CA_GITHUB_ACCESS_TOKEN }}
      ARTIFACTORY_READER_USER: ${{ secrets.ARTIFACTORY_SHERPA_USER }}
      ARTIFACTORY_READER_API_KEY: ${{ secrets.ARTIFACTORY_SHERPA_API_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID_VPT_PR }}
      AWS_ROLE_DEPLOY_BACKEND: ${{ secrets.AWS_ROLE_DEPLOY_BACKEND }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_VPT_PR }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_VPT_PR }}
      SONAR_CLOUD_ORG: ${{ secrets.SONAR_CLOUD_ORG }}
      SONAR_CLOUD_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}